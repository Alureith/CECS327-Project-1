version: '3.8'

networks:
  cluster-a:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

  shared-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.50.0/24

services:
  # Master container
  container-a-master:
    container_name: cluster-a-master
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.2  # Correct placement of ipv4_address
      shared-network:
        ipv4_address: 192.168.50.2
    volumes:
      - ./broadcast_server.py:/broadcast_server.py  # Mount the multicast sender script


  # Client containers (7 clients)
  container-a2:
    container_name: project1-container-a2
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.3  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script

  container-a3:
    container_name: project1-container-a3
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.4  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script

  container-a4:
    container_name: project1-container-a4
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.5  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script

  container-a5:
    container_name: project1-container-a5
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.6  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script

  container-a6:
    container_name: project1-container-a6
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.7  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script

  container-a7:
    container_name: project1-container-a7
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.8  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script

  container-a8:
    container_name: project1-container-a8
    image: python:3.9
    command: tail -f /dev/null  # Keeps the container running
    networks:
      cluster-a:
        ipv4_address: 192.168.100.9  # Correct placement of ipv4_address
    volumes:
      - ./broadcast_client.py:/broadcast_client.py  # Mount the broadcast_client.py script
